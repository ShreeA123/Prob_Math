import numpy as np
import matplotlib 
import matplotlib.pyplot as plt
import seaborn as sns
import math

def bino_dist(n,x,p,μ,v):
    supe = str.maketrans("nx"," ⁿˣ ")
    sub = str.maketrans("nx"," ₙₓ ")
    print("Enter the input in the format\n1.Enter values of n,p,x\n2.Enter values of  μ,v\n[ n:Number of trials,\tx:Required outcomes\n  p:Chance of success,\n  μ:Mean,\tv:Variance]")
    ans = input("Choose the format")
    if(ans==1):

#def binomial(n, k, p):                                                                    #Define the binomial function
#   print("Probablity of x : p(x)={}C{} p{} q{}".format("n".translate(supe), "x".translate(sub), "x".translate(supe), "n-x".translate(supe)))                                                                                        
#   coeff = math.factorial(n) / (math.factorial(k) * math.factorial(n - k))                 #Calculate the binomial coefficient
 
#   prob = coeff * pk * (1 - p)(n - k)                                                      #Calculate the probability
#   # Return the result
#   return prob

# n = 40 # Number of questions                                                               #Define the parameters
# p = 0.6 # Probability of knowing the answer
# k = 20 # Passing threshold

# sum = 0                                                                                    #Initialize the sum


# for i in range(k, n + 1):                                                                  #Loop over the possible outcomes
#   # Add the probability of each outcome to the sum
#   sum += binomial(n, i, p)

# print("The probability of passing the test is:", sum)                                      #Result


from numpy import random
sns.distplot(random.binomial(n=10, p=0.5, size=1000), hist=True, kde=False)

plt.show()                                                                                #Plot the result
